// <auto-generated />
using System;
using AU.Server.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AU.Server.Migrations
{
    [DbContext(typeof(AUContext))]
    [Migration("20220326200724_CreateInitial")]
    partial class CreateInitial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.3");

            modelBuilder.Entity("AU.Server.Models.Auth", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<long?>("Admin")
                        .HasColumnType("INTEGER")
                        .HasColumnName("admin");

                    b.Property<long?>("UserId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "IX_ auth_id")
                        .IsUnique();

                    b.HasIndex(new[] { "UserId" }, "IX_ auth_user_id")
                        .IsUnique();

                    b.ToTable(" auth", (string)null);
                });

            modelBuilder.Entity("AU.Server.Models.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT")
                        .HasColumnName("image");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<decimal?>("Price")
                        .HasColumnType("NUMERIC")
                        .HasColumnName("price");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "IX_product_id")
                        .IsUnique();

                    b.ToTable("product", (string)null);
                });

            modelBuilder.Entity("AU.Server.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("DarkTheme")
                        .HasColumnType("INTEGER")
                        .HasColumnName("dark_theme");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT")
                        .HasColumnName("first_name");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT")
                        .HasColumnName("image");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT")
                        .HasColumnName("last_name");

                    b.Property<long?>("Notifications")
                        .HasColumnType("INTEGER")
                        .HasColumnName("notifications");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT")
                        .HasColumnName("password");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "IX_user_Id")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "IX_user_email")
                        .IsUnique();

                    b.ToTable("user", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
