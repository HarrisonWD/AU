@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

@using System.Runtime.CompilerServices
    @*<button @onclick="ToggleUserMenu"
            @onfocusout="HideUserMenu"
            class="btn btn-secondary dropdown-toggle user-button">
        <i class="oi oi-person"></i>
    </button>*@
<AuthorizeView>
    <Authorized>
        <a class="nav-item nav-link" @onclick="Logout">Logout</a>
        <a href="profile" class="nav-item nav-link">Profile</a>
        <AdminMenu/>
    </Authorized>
    <NotAuthorized>
        <a href="login?returnUrl=@NavigationManager.ToBaseRelativePath(NavigationManager.Uri)" class="nav-item nav-link">Login<img src="Images/Icons/Sign In Icon.png" style="width: 25px; height: 25px;"></a>
        <a href="register" class="nav-item nav-link">Register</a>
    </NotAuthorized>
</AuthorizeView>


@code {
    private bool showUserMenu = false;
    //private string UserMenuCssClass => showUserMenu ? "show-menu" : null;

    //private void ToggleUserMenu()
    //{
    //    showUserMenu = !showUserMenu;
    //}

    //private async Task HideUserMenu()
    //{
    //    await Task.Delay(200);
    //    showUserMenu = false;
    //}

    private async Task Logout()
    {
        await LocalStorage.RemoveItemAsync("authToken");
        await AuthenticationStateProvider.GetAuthenticationStateAsync();
        NavigationManager.NavigateTo("");
    }
}
