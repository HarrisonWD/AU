@page "/shop"
@page "/{categoryUrl}"
@page "/search/{searchText}"
@inject IProductService ProductService
@implements IDisposable
<!-- Page Header Start -->
<div class="container-fluid bg-dark bg-img p-5 mb-5">
    <div class="row">
        <div class="col-12 text-center">
            <h1 class="display-4 text-uppercase text-white">Services</h1>
            <a href="">Home</a>
            <i class="far fa-square text-primary px-2"></i>
            <a href="">Services</a>
        </div>
    </div>
</div>
<!-- Page Header End -->
<!-- Service Start -->
<div class="container-fluid service position-relative px-5" style="margin-top: 90px;">
    <div class="container">
        <div class="row g-5">
            @if (ProductService.Products == null || ProductService.Products.Count == 0)
            {
                <span>@ProductService.Message</span>
            }
            else
            {
                <div class="row justify-content-center align-content-center">
                        @foreach (var product in ProductService.Products)
                        {
                            <div class="col">
                                <div class="card" style="width: 18rem;">
                                    <img src="" class="card-img-top" alt="@product.Image">
                                    <div class="card-body">
                                        <h5 class="card-title">@product.Name</h5>
                                        <p class="card-text">@product.Description</p>
                                        <h6>@GetPriceText(product)</h6>
                                        <a href="/product/@product.Id" class="btn btn-primary">View More</a>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
            }
            
            <div class="col-lg-12 col-md-6 text-center">
                <h1 class="text-uppercase text-light mb-4">30% Discount For This Summer</h1>
                <a href="" class="btn btn-primary border-inner py-3 px-5">Order Now</a>
            </div>
        </div>
    </div>
</div>
<!-- Service Start -->

@code
{
    [Parameter]
    public string? CategoryUrl { get; set; } = null;

    [Parameter]
    public string? SearchText { get; set; } = null;

    protected override async Task OnParametersSetAsync()
    {
        if (SearchText != null)
        {
            await ProductService.SearchProducts(SearchText);
        }
        else
        {
            await ProductService.GetProducts(CategoryUrl);
        }
        
    }
    protected override void OnInitialized()
    {
        ProductService.ProductsChanged += StateHasChanged;
    }

    public void Dispose()
    {
        ProductService.ProductsChanged -= StateHasChanged;
    }

    private string GetPriceText(Product product)
    {
        var variants = product.Variants;
        if (variants.Count == 0)
        {
            return string.Empty;
        } 
        else if (variants.Count == 1)
        {
            return $"£{variants[0].Price}";
        }
        decimal minPrice = variants.Min(v => v.Price);
        return $"Starting at £{minPrice}";
    }
}
